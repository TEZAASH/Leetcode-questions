class Solution {
public:
 int firsto(vector<int>& nums, int target){
     int n=nums.size();
     int e=n-1;
     int s=0;
     int ans=-1;
     int mid=s+(e-s)/2;
     while(s<=e){
     if(target==nums[mid]){
       ans=mid;
       e=mid-1;
     }
     else if(target>nums[mid]){
         s=mid+1;
     }
     else{
         e=mid-1;
     }
     mid=s+(e-s)/2;
 }
 return ans;
 }
  int secondo(vector<int>& nums, int target){
     int n=nums.size();
     int e=n-1;
     int s=0;
     int ans=-1;
     int mid=s+(e-s)/2;
     while(s<=e){
     if(target==nums[mid]){
       ans=mid;
       s=mid+1;
     }
     else if(target>nums[mid]){
         s=mid+1;
     }
     else{
         e=mid-1;
     }
     mid=s+(e-s)/2;
 }
 return ans;
 }
         

    vector<int> searchRange(vector<int>& nums, int target) {
           vector<int> ans ;
        ans.push_back(firsto(nums,target));
        ans.push_back(secondo(nums,target));
        return ans ;

        
    }
};
