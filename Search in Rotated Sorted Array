class Solution {
public:
   int pivot(vector<int>& nums, int s,int e,int mid){
       while(s<e){
           if(nums[mid]>=nums[0]){
               s=mid+1;
           }
           else{
               e=mid;
           }
           mid=s+(e-s)/2;
       }
       
       return s;

   }
   int binarysearch(vector<int>& nums, int target,int s,int e){
           int mid=s+(e-s)/2;
            while(s<=e){
             if(target==nums[mid]){
                 return mid;
             }
             else if(target<nums[mid]){
                 e=mid-1;
             }
             else{
                s=mid+1;
             }
             mid=s+(e-s)/2;
            }
            return -1;
   }

    int search(vector<int>& nums, int target) {

         
        int s=0;
        int e=nums.size()-1;
        int mid=s+(e-s)/2;
        int pivo=pivot(nums,s,e,mid);
         if(target>=nums[pivo]&& target<=nums[e]) {
        return binarysearch(nums,target,pivo,e);
        
    }
    else{
        return binarysearch(nums,target,s,pivo-1);
    }
    }

};
